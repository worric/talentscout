
import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.UUID;
import javax.swing.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @author Frederik Frode Nygart
 * @author Mikkel Mørch
 * @author Jacob Krag Hansen
 * @author Robin Damsgaard Larsen
 * @author Lotte Selnø
 * @author Bjørn Alsted Nielsen 
 */
public class UserInterface extends javax.swing.JFrame {
    static final Agenda AGENDA = new Agenda();
    static final PlayerDB PDB = new PlayerDB();
    static final DateManager DATEMANAGER = new DateManager();
    JDialog sessionFrame = new JDialog();
    private UUID currentPlayerID;
    private UUID currentSessionID;
    ArrayList<Player> tempPlayersToSession;
    /**
     * Creates new form UserInterface
     */
    DefaultTableModel playerListModel;
    DefaultTableModel agendaModel;
    DefaultTableModel sessionModel;
    public UserInterface() {
        initComponents();
        playerListModel = (DefaultTableModel) plrTable.getModel();
        agendaModel = (DefaultTableModel) upcomingTable.getModel();
        sessionModel = (DefaultTableModel) sessionNotesTable.getModel();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sessionPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        sessionPlayersBox = new javax.swing.JComboBox<Item<Player>>();
        sessionDateLabel = new javax.swing.JLabel();
        sessionPlaceLabel = new javax.swing.JLabel();
        sessionCreateNoteBtn = new javax.swing.JButton();
        sessionViewProfileBtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        sessionIDLabel = new javax.swing.JLabel();
        sessionCreateNotePanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        sessionNoteSpeed = new javax.swing.JTextField();
        sessionNoteAttitude = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        sessionNoteTechnique = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        sessionNoteGamesense = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        sessionRatingSpeed = new javax.swing.JComboBox<>();
        sessionRatingAttitude = new javax.swing.JComboBox<>();
        sessionRatingTechnique = new javax.swing.JComboBox<>();
        sessionRatingGamesense = new javax.swing.JComboBox<>();
        sessionAddNote = new javax.swing.JButton();
        menuPanel = new javax.swing.JPanel();
        saveAllBtn = new javax.swing.JButton();
        registerPlayer = new javax.swing.JButton();
        viewAgenda = new javax.swing.JButton();
        viewPlayerList = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        playerListPanel = new javax.swing.JPanel();
        searchFieldName = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        searchFieldClub = new javax.swing.JTextField();
        searchFieldAge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        plrTable = new org.jdesktop.swingx.JXTable();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        registerPanel = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        clubField = new javax.swing.JTextField();
        registerBtn = new javax.swing.JButton();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        agendaPanel = new javax.swing.JPanel();
        playerPanelBottom = new javax.swing.JPanel();
        playerPanelBottomBlank = new javax.swing.JPanel();
        upcomingLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        upcomingTable = new org.jdesktop.swingx.JXTable();
        sessionAddBtn = new javax.swing.JButton();
        sessionPlaceField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        sessionDateField = new javax.swing.JFormattedTextField();
        sessionAddPlayerBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        sessionPlayersTF = new javax.swing.JTextArea();
        sessionPlayerBox = new javax.swing.JComboBox<Item<Player>>();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        playerPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        playerNameLabel = new javax.swing.JLabel();
        playerAgeLabel = new javax.swing.JLabel();
        playerClubLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        sessionNotesTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        notePanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        noteTFSpeed = new javax.swing.JTextField();
        noteTFAttitude = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        noteTFTechnique = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        noteTFGamesense = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        notePlayerNameLabel = new javax.swing.JLabel();
        noteRatingSpeed = new javax.swing.JLabel();
        noteRatingAttitude = new javax.swing.JLabel();
        noteRatingTechnique = new javax.swing.JLabel();
        noteRatingGamesense = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        noteDateLabel = new javax.swing.JLabel();
        noteLocationLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        noteEditBtn = new javax.swing.JButton();
        notePanelEdit = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        noteTFSpeed1 = new javax.swing.JTextField();
        noteTFAttitude1 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        noteTFTechnique1 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        noteTFGamesense1 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        notePlayerNameLabelEdit = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        noteDateLabelEdit = new javax.swing.JLabel();
        noteLocationLabelEdit = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        noteRatingSpeedEdit = new javax.swing.JComboBox<>();
        noteRatingAttitudeEdit = new javax.swing.JComboBox<>();
        noteRatingTechniqueEdit = new javax.swing.JComboBox<>();
        noteRatingGamesenseEdit = new javax.swing.JComboBox<>();
        cancelNoteEditBtn = new javax.swing.JButton();
        noteSaveBtn = new javax.swing.JButton();

        jLabel13.setText("Date:");

        jLabel14.setText("Location:");

        /*
        sessionPlayersBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        */

        sessionDateLabel.setText("jLabel17");

        sessionPlaceLabel.setText("jLabel18");

        sessionCreateNoteBtn.setText("Create note");
        sessionCreateNoteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionCreateNoteBtnActionPerformed(evt);
            }
        });

        sessionViewProfileBtn.setText("View profile");
        sessionViewProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionViewProfileBtnActionPerformed(evt);
            }
        });

        jLabel19.setText("Players:");

        sessionIDLabel.setText("sessionIDLabel");
        sessionIDLabel.setVisible(false);

        javax.swing.GroupLayout sessionPanelLayout = new javax.swing.GroupLayout(sessionPanel);
        sessionPanel.setLayout(sessionPanelLayout);
        sessionPanelLayout.setHorizontalGroup(
            sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessionPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sessionPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(35, 35, 35)
                        .addComponent(sessionDateLabel))
                    .addComponent(sessionCreateNoteBtn)
                    .addGroup(sessionPanelLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sessionPlayersBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sessionPanelLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(sessionPlaceLabel))
                    .addComponent(sessionViewProfileBtn)
                    .addComponent(sessionIDLabel))
                .addGap(34, 34, 34))
        );
        sessionPanelLayout.setVerticalGroup(
            sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessionPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(sessionDateLabel)
                    .addComponent(sessionPlaceLabel))
                .addGap(18, 18, 18)
                .addGroup(sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionPlayersBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(sessionIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(sessionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionCreateNoteBtn)
                    .addComponent(sessionViewProfileBtn))
                .addGap(22, 22, 22))
        );

        jLabel15.setText("New note");

        jLabel17.setText("Speed:");

        sessionNoteSpeed.setText("jTextField1");

        sessionNoteAttitude.setText("jTextField1");

        jLabel18.setText("Attitude:");

        sessionNoteTechnique.setText("jTextField1");

        jLabel20.setText("Technique");

        sessionNoteGamesense.setText("jTextField1");

        jLabel21.setText("Gamesense");

        jLabel22.setText("Ratings:");

        sessionRatingSpeed.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        sessionRatingAttitude.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        sessionRatingTechnique.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        sessionRatingGamesense.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        sessionAddNote.setText("Create note");
        sessionAddNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionAddNoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sessionCreateNotePanelLayout = new javax.swing.GroupLayout(sessionCreateNotePanel);
        sessionCreateNotePanel.setLayout(sessionCreateNotePanelLayout);
        sessionCreateNotePanelLayout.setHorizontalGroup(
            sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessionCreateNotePanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(sessionNoteSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(sessionNoteAttitude, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(sessionNoteTechnique, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(sessionNoteGamesense, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(sessionRatingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingAttitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingTechnique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingGamesense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sessionCreateNotePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sessionAddNote)
                .addGap(48, 48, 48))
        );
        sessionCreateNotePanelLayout.setVerticalGroup(
            sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessionCreateNotePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionNoteSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionNoteAttitude, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingAttitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionNoteTechnique, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingTechnique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sessionCreateNotePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionNoteGamesense, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionRatingGamesense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(sessionAddNote)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuPanel.setBackground(new java.awt.Color(204, 204, 204));

        saveAllBtn.setText("Save");
        saveAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAllBtnActionPerformed(evt);
            }
        });

        registerPlayer.setText("Register player");
        registerPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerPlayerActionPerformed(evt);
            }
        });

        viewAgenda.setText("Agenda");
        viewAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAgendaActionPerformed(evt);
            }
        });

        viewPlayerList.setText("View player list");
        viewPlayerList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPlayerListActionPerformed(evt);
            }
        });

        jButton4.setText("Create new Event");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Register Player");

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(viewAgenda)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerPlayer, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(viewPlayerList, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(12, 12, 12))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveAllBtn)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        menuPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton4, jButton5, registerPlayer, saveAllBtn, viewAgenda, viewPlayerList});

        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(registerPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewAgenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPlayerList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveAllBtn)
                .addGap(114, 114, 114)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(278, Short.MAX_VALUE))
        );

        getContentPane().add(menuPanel, java.awt.BorderLayout.LINE_START);

        contentPanel.setLayout(new java.awt.CardLayout());

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchFieldClub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldClubActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        jLabel5.setText("Club:");

        jLabel6.setText("Age:");

        plrTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Club", "playerID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        plrTable.getTableHeader().setReorderingAllowed(false);
        plrTable.removeColumn(plrTable.getColumnModel().getColumn(3));
        plrTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                plrTableMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(plrTable);

        jXLabel1.setText("Player list");
        jXLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N

        javax.swing.GroupLayout playerListPanelLayout = new javax.swing.GroupLayout(playerListPanel);
        playerListPanel.setLayout(playerListPanelLayout);
        playerListPanelLayout.setHorizontalGroup(
            playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerListPanelLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
            .addGroup(playerListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchBtn)
                    .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(playerListPanelLayout.createSequentialGroup()
                            .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(53, 53, 53)
                            .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addComponent(searchFieldClub)
                                .addComponent(searchFieldAge)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        playerListPanelLayout.setVerticalGroup(
            playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerListPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFieldClub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(27, 27, 27)
                .addComponent(searchBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        contentPanel.add(playerListPanel, "card2");

        registerPanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Name:");

        jLabel2.setText("Age:");

        jLabel3.setText("Club:");

        registerBtn.setText("Save");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        jXLabel2.setText("Register Player");
        jXLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerBtn)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clubField)
                            .addComponent(ageField)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(clubField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(registerBtn)
                .addContainerGap(339, Short.MAX_VALUE))
        );

        contentPanel.add(registerPanel, "card4");

        agendaPanel.setBackground(new java.awt.Color(255, 255, 255));

        playerPanelBottomBlank.setPreferredSize(new java.awt.Dimension(418, 418));

        upcomingLabel.setText("Upcoming events");

        jButton2.setText("Clear all");

        upcomingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Location", "Players", "sessionID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        upcomingTable.getTableHeader().setReorderingAllowed(false);
        upcomingTable.removeColumn(upcomingTable.getColumnModel().getColumn(3));
        upcomingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                upcomingTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(upcomingTable);

        javax.swing.GroupLayout playerPanelBottomBlankLayout = new javax.swing.GroupLayout(playerPanelBottomBlank);
        playerPanelBottomBlank.setLayout(playerPanelBottomBlankLayout);
        playerPanelBottomBlankLayout.setHorizontalGroup(
            playerPanelBottomBlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerPanelBottomBlankLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(playerPanelBottomBlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerPanelBottomBlankLayout.createSequentialGroup()
                        .addComponent(upcomingLabel)
                        .addGap(380, 380, 380))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerPanelBottomBlankLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(41, 41, 41))))
            .addGroup(playerPanelBottomBlankLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        playerPanelBottomBlankLayout.setVerticalGroup(
            playerPanelBottomBlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelBottomBlankLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upcomingLabel)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout playerPanelBottomLayout = new javax.swing.GroupLayout(playerPanelBottom);
        playerPanelBottom.setLayout(playerPanelBottomLayout);
        playerPanelBottomLayout.setHorizontalGroup(
            playerPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerPanelBottomBlank, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );
        playerPanelBottomLayout.setVerticalGroup(
            playerPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelBottomLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(playerPanelBottomBlank, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sessionAddBtn.setText("Add event");
        sessionAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionAddBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Date");

        jLabel8.setText("Location");

        jLabel9.setText("Player");

        sessionAddPlayerBtn.setText("Add");
        sessionAddPlayerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionAddPlayerBtnActionPerformed(evt);
            }
        });

        sessionPlayersTF.setEditable(false);
        sessionPlayersTF.setColumns(20);
        sessionPlayersTF.setRows(5);
        sessionPlayersTF.setToolTipText("");
        sessionPlayersTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sessionPlayersTFMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(sessionPlayersTF);

        /*
        sessionPlayerBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        */

        jXLabel3.setText("Agenda");
        jXLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N

        javax.swing.GroupLayout agendaPanelLayout = new javax.swing.GroupLayout(agendaPanel);
        agendaPanel.setLayout(agendaPanelLayout);
        agendaPanelLayout.setHorizontalGroup(
            agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerPanelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(agendaPanelLayout.createSequentialGroup()
                .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agendaPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(32, 32, 32)
                                .addComponent(sessionPlayerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sessionAddPlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113))
                            .addComponent(sessionAddBtn, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(agendaPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(32, 32, 32)
                        .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sessionDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sessionPlaceField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agendaPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
        );

        agendaPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {sessionDateField, sessionPlaceField, sessionPlayerBox});

        agendaPanelLayout.setVerticalGroup(
            agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sessionDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionPlaceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(agendaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(sessionAddPlayerBtn)
                    .addComponent(sessionPlayerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sessionAddBtn)
                .addGap(35, 35, 35)
                .addComponent(playerPanelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        agendaPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {sessionDateField, sessionPlaceField, sessionPlayerBox});

        contentPanel.add(agendaPanel, "card3");

        jLabel10.setText("Name:");

        jLabel11.setText("Age:");

        jLabel12.setText("Club:");

        playerNameLabel.setText("jLabel13");

        playerAgeLabel.setText("jLabel14");

        playerClubLabel.setText("jLabel15");

        sessionNotesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Location", "sessionID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sessionNotesTable.getTableHeader().setReorderingAllowed(false);
        sessionNotesTable.removeColumn(sessionNotesTable.getColumnModel().getColumn(2));
        sessionNotesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sessionNotesTableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(sessionNotesTable);

        jLabel16.setText("Session notes");

        jXLabel4.setText("Player Profile");
        jXLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N

        javax.swing.GroupLayout playerPanelLayout = new javax.swing.GroupLayout(playerPanel);
        playerPanel.setLayout(playerPanelLayout);
        playerPanelLayout.setHorizontalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(playerPanelLayout.createSequentialGroup()
                                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10))
                                .addGap(53, 53, 53)
                                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(playerPanelLayout.createSequentialGroup()
                                        .addComponent(playerNameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12)
                                        .addGap(53, 53, 53)
                                        .addComponent(playerClubLabel))
                                    .addComponent(playerAgeLabel)))))
                    .addComponent(jLabel16))
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176))
        );

        playerPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12});

        playerPanelLayout.setVerticalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(playerNameLabel)
                    .addComponent(jLabel12)
                    .addComponent(playerClubLabel))
                .addGap(18, 18, 18)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(playerAgeLabel))
                .addGap(54, 54, 54)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        playerPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12});

        contentPanel.add(playerPanel, "card5");

        notePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                notePanelMousePressed(evt);
            }
        });

        jLabel23.setText("Player:");

        jLabel24.setText("Speed:");

        noteTFSpeed.setEditable(false);
        noteTFSpeed.setText("jTextField1");

        noteTFAttitude.setEditable(false);
        noteTFAttitude.setText("jTextField1");

        jLabel25.setText("Attitude:");

        noteTFTechnique.setEditable(false);
        noteTFTechnique.setText("jTextField1");

        jLabel26.setText("Technique");

        noteTFGamesense.setEditable(false);
        noteTFGamesense.setText("jTextField1");

        jLabel27.setText("Gamesense");

        jLabel28.setText("Ratings:");

        notePlayerNameLabel.setText("jLabel29");

        noteRatingSpeed.setText("jLabel29");

        noteRatingAttitude.setText("jLabel30");

        noteRatingTechnique.setText("jLabel31");

        noteRatingGamesense.setText("jLabel32");

        jLabel29.setText("Date:");

        jLabel30.setText("Location:");

        noteDateLabel.setText("jLabel31");

        noteLocationLabel.setText("jLabel31");

        jButton1.setText("Return to profile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        noteEditBtn.setText("Edit note");
        noteEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteEditBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout notePanelLayout = new javax.swing.GroupLayout(notePanel);
        notePanel.setLayout(notePanelLayout);
        notePanelLayout.setHorizontalGroup(
            notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notePanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, notePanelLayout.createSequentialGroup()
                        .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noteTFSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(noteTFAttitude, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(noteTFTechnique, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(noteTFGamesense, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(notePanelLayout.createSequentialGroup()
                        .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel29))
                        .addGap(18, 18, 18)
                        .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notePlayerNameLabel)
                            .addGroup(notePanelLayout.createSequentialGroup()
                                .addComponent(noteDateLabel)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel30)
                                .addGap(18, 18, 18)
                                .addComponent(noteLocationLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(notePanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(noteRatingGamesense)
                                        .addComponent(noteRatingTechnique)
                                        .addComponent(noteRatingAttitude)
                                        .addComponent(noteRatingSpeed))
                                    .addComponent(noteEditBtn))))
                        .addGap(17, 17, 17))))
        );
        notePanelLayout.setVerticalGroup(
            notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notePanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(notePlayerNameLabel)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(noteDateLabel)
                    .addComponent(noteLocationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingSpeed))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFAttitude, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingAttitude))
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFTechnique, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingTechnique))
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFGamesense, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingGamesense))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noteEditBtn)
                .addGap(18, 18, 18))
        );

        contentPanel.add(notePanel, "card7");

        jLabel31.setText("Player:");

        jLabel32.setText("Speed:");

        noteTFSpeed1.setText("jTextField1");

        noteTFAttitude1.setText("jTextField1");

        jLabel33.setText("Attitude:");

        noteTFTechnique1.setText("jTextField1");

        jLabel34.setText("Technique");

        noteTFGamesense1.setText("jTextField1");

        jLabel35.setText("Gamesense");

        jLabel36.setText("Ratings:");

        notePlayerNameLabelEdit.setText("jLabel29");

        jLabel37.setText("Date:");

        jLabel38.setText("Location:");

        noteDateLabelEdit.setText("jLabel31");

        noteLocationLabelEdit.setText("jLabel31");

        jButton3.setText("Return to profile");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        noteRatingSpeedEdit.setEditable(true);
        noteRatingSpeedEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        noteRatingAttitudeEdit.setEditable(true);
        noteRatingAttitudeEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        noteRatingTechniqueEdit.setEditable(true);
        noteRatingTechniqueEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        noteRatingGamesenseEdit.setEditable(true);
        noteRatingGamesenseEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        cancelNoteEditBtn.setText("Cancel");
        cancelNoteEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelNoteEditBtnActionPerformed(evt);
            }
        });

        noteSaveBtn.setText("Save");
        noteSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteSaveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout notePanelEditLayout = new javax.swing.GroupLayout(notePanelEdit);
        notePanelEdit.setLayout(notePanelEditLayout);
        notePanelEditLayout.setHorizontalGroup(
            notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notePanelEditLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(notePanelEditLayout.createSequentialGroup()
                        .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noteTFSpeed1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33)
                            .addComponent(noteTFAttitude1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(noteTFTechnique1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(noteTFGamesense1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notePanelEditLayout.createSequentialGroup()
                                    .addComponent(noteRatingGamesenseEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(76, 76, 76))
                                .addGroup(notePanelEditLayout.createSequentialGroup()
                                    .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(noteRatingTechniqueEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(noteRatingAttitudeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(noteRatingSpeedEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addContainerGap()))
                            .addGroup(notePanelEditLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addGap(76, 76, 76))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notePanelEditLayout.createSequentialGroup()
                        .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(notePanelEditLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cancelNoteEditBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(noteSaveBtn))
                            .addGroup(notePanelEditLayout.createSequentialGroup()
                                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel37))
                                .addGap(18, 18, 18)
                                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(notePlayerNameLabelEdit)
                                    .addGroup(notePanelEditLayout.createSequentialGroup()
                                        .addComponent(noteDateLabelEdit)
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel38)
                                        .addGap(18, 18, 18)
                                        .addComponent(noteLocationLabelEdit)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(jButton3)))
                        .addGap(17, 17, 17))))
        );
        notePanelEditLayout.setVerticalGroup(
            notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notePanelEditLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(notePlayerNameLabelEdit)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(noteDateLabelEdit)
                    .addComponent(noteLocationLabelEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFSpeed1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingSpeedEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFAttitude1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingAttitudeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFTechnique1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingTechniqueEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTFGamesense1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noteRatingGamesenseEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(notePanelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteSaveBtn)
                    .addComponent(cancelNoteEditBtn))
                .addGap(18, 18, 18))
        );

        contentPanel.add(notePanelEdit, "card7");

        getContentPane().add(contentPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    /**
     * 
     * 
     * 
     *        GETTERS ANS SETTERS
     *            BEGINNING
     * 
     * 
     */
    
    public String getSearchFieldNameText(){
        return this.searchFieldName.getText();
    }
    
    public String getSearchFieldClubText(){
        return this.searchFieldClub.getText();
    }

    public String getSearchFieldAgeText(){
        return this.searchFieldAge.getText();
    }
    
    public String getSessionDateField(){
        return this.sessionDateField.getText();
    }
    
    public void setSessionDateField(String str){
        this.sessionDateField.setText(str);
    }
    
    public String getSessionPlaceField(){
        return this.sessionPlaceField.getText();
    }
    
    public void setSessionPlaceField(String str){
        this.sessionPlaceField.setText(str);
    }
    
    public UUID getPlayerID(){
        return this.currentPlayerID;
    }
    
    public UUID getSessionID(){
        return this.currentSessionID;
    }
    
    /**
     * FUNCTION HAS NO USAGES - TO BE DELETED
     * @return 
     */
    public String[] getAllPlayerNames(){
    	//new ArrayList of Player names 
    	ArrayList<String> strNames = new ArrayList<String>();
            // Get current ArrayList of all Player Objects
            ArrayList<Player> list = PDB.getArrayListPlayer();
                // Check if there are Player Objects in the array
                if(!list.isEmpty()) {                   
                    // iterate through all Player Objects
                    for(int i = 0; i < list.size(); i++){                    	
                    	String plrName = list.get(i).getName();
                    	strNames.add(plrName);
                    }
                }

                // new String array
                String[] strArray = new String[list.size()];
                strNames.toArray(strArray);
                Arrays.sort(strArray);
                return strArray;
    }
    
     /**
     * 
     * 
     * 
     *        GETTERS ANS SETTERS
     *                END
     * 
     * 
     */
    
    /**
     * 
     * 
     * 
     *        GUI FUNCTIONS
     *          BEGINNING
     * 
     * 
     */
    
    /**
     * Changes the content area.
     * More specifically, it changes the card in a cardLayout container
     * @param parent the container in which we want to change layout
     * @param child the component (the layout) which we want to add to the container
     */
    public void changeCard(Container parent, Component child){
        // remove all components from the container
        // the method invalidates the component hierarchy, which is why 
        // the hierarchy must be validated to reflect the changes - this is done
        // with revalidate().
        parent.removeAll();
        // adds a component to the container
        parent.add(child);
        // 
        parent.repaint();
        // revalidates the component hierarchy
        parent.revalidate();
    }
    
    /**
     * Returns the current visible card in the CardLayout of the contentPanel
     * @return JPanel
     */
    public JPanel getCurrentCard(){
        JPanel card = null;
        for(Component comp : contentPanel.getComponents()){
            if(comp.isVisible()){
                card = (JPanel) comp;
            }

        }
        return card;
    }
    
    /**
     * Checks if the already visible card is different from the card the user wants to be displayed
     * @param comp The component we wish to compare to the current visible card.
     * @return TRUE if they are different
     */
    public boolean checkVisibleCard(Component comp){
        return !getCurrentCard().equals(comp);
    }
    
     /**
     * displays List of Players in a table in the playerListPanel
     */
    public void viewPlayerList(){
        changeCard(contentPanel, playerListPanel);
        populatePlayerList();
    }
    
    public void populatePlayerList(){
        // Firstly, clear table from content to avoid inserting all players twice
        playerListModel.setRowCount(0);
        
        try{
            // Get current ArrayList of all Player Objects
            ArrayList<Player> list = PDB.getArrayListPlayer();
                // Check if there are Player Objects in the array
                if(!list.isEmpty()) {                   
                    // iterate through all Player Objects
                    for(int i = 0; i < list.size(); i++){
                        //open each player file
                        //Player plrRestore = function.open(list[i].getName());
                    	Player plrRestore = list.get(i);
                    	// print the list to the console as a test
                    	System.out.println(list.get(i).getName());
                        //convert the ints to Strings
                        String age = Integer.toString(plrRestore.getAge());

                        // create array containing player attributes
                        Object[] data = {plrRestore.getName(), age, plrRestore.getClub(), plrRestore.getID()};
                        
                        // insert the array into the table 
                        playerListModel.addRow(data);
                    }
                }
        } catch (Exception e){
            e.printStackTrace();
        }
    }
    
     /**
     * displays List of sessions in a table in the agendaPanel
     */
    public void viewAgenda(){
        changeCard(contentPanel, agendaPanel);
        // Clear table from content 
        agendaModel.setRowCount(0);
        
        try{
            
            for(int i = 0; i < AGENDA.getNumberOfSessions(); i++){
                ScoutingSession ss = AGENDA.getSessionByIndex(i);
                String date = DATEMANAGER.fromDateToString(ss.getDate());
                UUID id = ss.getSessionID();
                // Number of players in the array
                int lengthOfPlayerStrArray = ss.getNumberOfPlayers();
                // Merging the players into one String where each player is divided by a comma and whitespace
                StringBuilder players = new StringBuilder();
                for(int k = 0; k < lengthOfPlayerStrArray; k++){
                    players.append(ss.getPlayer(k).getName());
                    if(k < lengthOfPlayerStrArray-1){
                    players.append(", ");
                    }
                }
                // create array containing player attributes
                Object[] data = {date, ss.getLocation(), players.toString(), id};

                // insert the array into the table 
                agendaModel.addRow(data);
            }
        } catch (NullPointerException e){
            e.printStackTrace();
        }
    }
    
    /**
     * Opens a new window containing information about a specific Scouting Session
     * @param sessionID The ID of the Scouting Session which is to be opened
     */
    public void viewSession(UUID sessionID){
        sessionFrame.getContentPane().removeAll();
        sessionFrame.getContentPane().add(sessionPanel);
        sessionFrame.pack();
        sessionFrame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        sessionFrame.setVisible(true);
        
        ScoutingSession ss = AGENDA.getSessionByID(sessionID);
        String date = DATEMANAGER.fromDateToString(ss.getDate());
        sessionDateLabel.setText(date);
        sessionPlaceLabel.setText(ss.getLocation());
        String id = ss.getSessionID().toString();
        sessionIDLabel.setText(id);
        
        /*
        //Retrieving players associated with the Scouting Session
        //Populating a String array with the players
        String[] players = new String[ss.getNumberOfPlayers()];
        for(int i = 0; i < ss.getNumberOfPlayers(); i++){
            players[i] = ss.getPlayer(i).getName();
        }*/
        
        // Retrieving players associated with the Scouting Session
        // Populating a ArrayList<Player> with the players
        ArrayList<Player> players = new ArrayList<Player>();
        for(int i = 0; i < ss.getNumberOfPlayers(); i++){
            players.add(ss.getPlayer(i));
        }
        
        // #MM IMPLEMENTATION of new custom ComboBox here
        addPlayersToComboBox(sessionPlayersBox, players);
        
        // Previous ComboBox
        //Exporting players into the ComboBox
        //sessionPlayersBox.setModel(new DefaultComboBoxModel<String>(players));
    }
    
    /**
     * Adds a content area to the window displaying a specific Scouting Session,
     * which allows the user to create a note on a player.
     */
    public void viewCreateNoteInSession(){
        sessionPanel.add(Box.createVerticalGlue());
        sessionFrame.setLayout(new FlowLayout());
        sessionFrame.getContentPane().add(sessionCreateNotePanel);
        sessionFrame.pack();
    }
    
    /**
     * Inserts all notes of a player into a table on the player's profile.
     * @param player 
     */
    public void InsertNoteIntoSessionTable(Player player){
        sessionModel.setRowCount(0);
        try{
            for(int i = 0; i < player.getNumberOfNotes(); i++){
                ScoutingSession ss = player.getNote(i).getSession();
                String date = DATEMANAGER.fromDateToString(ss.getDate());
                String location = ss.getLocation();
                UUID sessionID = ss.getSessionID();
                Object[] data = { date, location, sessionID};
                sessionModel.addRow(data);
            }
        } catch(NullPointerException e){
            e.printStackTrace();
        }
    }
    
    /**
     * Displays a Player profile in the content area.
     * @param plr The Player Object whose profile is to be displayed
     */
    public void viewPlayerProfile(Player plr){
        changeCard(contentPanel, playerPanel);
        
        Player player = plr;
        
        String playerName = player.getName();
        String age = Integer.toString(player.getAge());
        String playerAge = age;
        String playerClub = player.getClub();
        String playerID = player.getID().toString();
        
        playerAgeLabel.setText(playerAge);
        playerNameLabel.setText(playerName);
        playerClubLabel.setText(playerClub);
        InsertNoteIntoSessionTable(player);
    }
    
    /**
     * Displays a Player profile in the content area.
     * @param id The ID of the Player object whose profile is to be displayed
     */
    public void viewPlayerProfileByID(UUID id){
        changeCard(contentPanel, playerPanel);
        this.currentPlayerID = id;
        Player player = PDB.getPlayerById(id);
        
        String playerName = player.getName();
        String age = Integer.toString(player.getAge());
        String playerAge = age;
        String playerClub = player.getClub();
        
        playerAgeLabel.setText(playerAge);
        playerNameLabel.setText(playerName);
        playerClubLabel.setText(playerClub);
        InsertNoteIntoSessionTable(player);
    }
    
    /**
     * Displays the note of a player.
     * Activated when a note is clicked upon in a player profile
     * @param ssID The ID of the Scouting Session associated with the note.
     */
    public void viewNote(UUID ssID){
        changeCard(contentPanel, notePanel);
        ScoutingSession ss = AGENDA.getSessionByID(ssID);
        
        //Converting date to String
        String date = DATEMANAGER.fromDateToString(ss.getDate());
        noteDateLabel.setText(date);
        noteLocationLabel.setText(ss.getLocation());
        notePlayerNameLabel.setText(playerNameLabel.getText());
        
        // Retrieving the ID of the current selected player
        UUID plrID = this.getPlayerID();
        // Retrieving the Player object with the ID
        Player plr = PDB.getPlayerById(plrID);
        
        // Looping through the Notes of the player.
        for(int i = 0; i < plr.getNumberOfNotes(); i++){
            // Finding the note which matches the ID of the scouting session
            if(plr.getNote(i).getSession().getSessionID() == ssID){
                // Get the text notes
                noteTFSpeed.setText(plr.getNote(i).getSpeedText());
                noteTFAttitude.setText(plr.getNote(i).getAttitudeText());
                noteTFTechnique.setText(plr.getNote(i).getTechniqueText());
                noteTFGamesense.setText(plr.getNote(i).getGameSenseText());
                
                // Get the scores
                String speed = Integer.toString(plr.getNote(i).getSpeedScore());
                noteRatingSpeed.setText(speed);
                String attitude = Integer.toString(plr.getNote(i).getAttitudeScore());
                noteRatingAttitude.setText(attitude);
                String tech = Integer.toString(plr.getNote(i).getTechniqueScore());
                noteRatingTechnique.setText(tech);
                String gamesense = Integer.toString(plr.getNote(i).getGameSenseScore());
                noteRatingGamesense.setText(gamesense);
            } 
        }
        
    }
    /**
     * 
     * 
     * 
     *         GUI FUNCTIONS
     *              END
     * 
     * 
     */
    
     /**
     * 
     * 
     *  ACTIONLISTENERS
     *    BEGINNING
     * 
     */
    
    /**
     * 
     * @param evt 
     */
    private void registerPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerPlayerActionPerformed
        if(checkVisibleCard(registerPanel)){
            if(warningUnsavedSessionDetailsToBeLost()){
                changeCard(contentPanel, registerPanel);

                nameField.setText("");
                ageField.setText("");
                clubField.setText("");
            }
        }
    }//GEN-LAST:event_registerPlayerActionPerformed

    private void viewAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAgendaActionPerformed
        if(checkVisibleCard(agendaPanel)){
            changeCard(contentPanel, agendaPanel);
            sessionDateField.setText("");
            sessionPlaceField.setText("");
                viewAgenda();
            
            // #MM IMPLEMENTATION of new custom ComboBox here
            addPlayersToComboBox(sessionPlayerBox, PDB.getArrayListPlayer());
            
            // Previous ComboBox
            // sets the ComboBox content
            //sessionPlayerBox.setModel(new DefaultComboBoxModel<String>(getAllPlayerNames()));
        }
    }//GEN-LAST:event_viewAgendaActionPerformed

    private void viewPlayerListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPlayerListActionPerformed
        if(checkVisibleCard(playerListPanel)){
            if(warningUnsavedSessionDetailsToBeLost()){
                viewPlayerList();
            }
        }
    }//GEN-LAST:event_viewPlayerListActionPerformed
    
    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        String name = nameField.getText();
        String strAge = ageField.getText();
        int age = Integer.parseInt(strAge);
        String club = clubField.getText();
        
        // Saving the player object in a file
        PDB.register(name, age, club);
        
        // Let the user view the player list
        viewPlayerList();
    }//GEN-LAST:event_registerBtnActionPerformed

    private void saveAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAllBtnActionPerformed
    	// Erstattet med savePlayerDB, som skriver alle Player Objects i ArrayListen
    	// til filen. 
    	
    	PDB.savePlayerDB();
    	AGENDA.saveAgenda();
    }//GEN-LAST:event_saveAllBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        
        try{
            playerListModel.setRowCount(0);
            //function.InsertSearchResultToTable(getSearchFieldNameText(), getSearchFieldClubText(), getSearchFieldAgeText(), model);
           // function.InsertSearchResultToTableName(getSearchFieldNameText(), model);
        } catch (Exception e){
            e.getCause();
            e.getClass();
            e.printStackTrace();   
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchFieldClubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldClubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldClubActionPerformed

    private void sessionAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionAddBtnActionPerformed
        // User given date, which is a String
        String strDate = getSessionDateField();
        // Convertion of the String to Date
        Date date = DATEMANAGER.fromStringToDate(strDate);
        // User given location
        String place = getSessionPlaceField();
        
        // Scouting session added to the agenda ArrayList
        ScoutingSession ss = AGENDA.planSession(place, date);
        
        // Assign Scouting Session ID to instance variable 
        this.currentSessionID = ss.getSessionID();
        /*
        // Adding the seleced players to the Scouting session
        String[] players = getPlayerFromTF();
        for(String name : players){
            Player player = PDB.getPlayerByName(name);
            // adds the player to the session with the ID of the player
            ss.addPlayer(player);
        }*/
        
        // Adding the selected players saved in an instance variable of type ArrayList to the Scouting Session
        for(Player player : this.tempPlayersToSession){
            // adds the player to the session with the ID of the player
            ss.addPlayer(player);
        }
        
        viewAgenda();
        sessionDateField.setText("");
        sessionPlaceField.setText("");
        sessionPlayersTF.setText("");
        upcomingTable.packAll();
    }//GEN-LAST:event_sessionAddBtnActionPerformed
/**
 * Adds a selected player to a TextField, which shows the players whom the user want to add
 * to his session. 
 * @param evt 
 */
    private void sessionAddPlayerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionAddPlayerBtnActionPerformed

        // User input containing name of Player
        String inputPlayer = sessionPlayerBox.getSelectedItem().toString();
        
        /** Retrieving the Player object selected in the ComboBox */
        // 1. step is to retrieve the Item which the Player object is wrapped in
        Item item = (Item) sessionPlayerBox.getSelectedItem();
        // 2. step is to retrieve the Player object from the item wrapper
        Player player = (Player) item.getValue();
        
        // Getting the content of the JTextField of already added players
        String playersInTF = sessionPlayersTF.getText();

        // Checking if the TextField is empty.
        if(playersInTF.isEmpty()){

            // Checking if a player is selected
            if(inputPlayer.isEmpty()) {
                // Display a message to the user to guide him.
                JOptionPane.showMessageDialog(new JDialog(), "Please select a player from the list.");
            } else {
            sessionPlayersTF.append(inputPlayer + "\n");
            }
        // If the JTextField isn't empty
        } else {
            // Check if a player already has been added to the TextField
            if(!PlayerAlreadyAdded()){
                // If the player isn't added already, we append him to the TextField.
                sessionPlayersTF.append(inputPlayer + "\n");
                // And add him to the instance variable ArrayList
                tempPlayersToSession.add(player);
            } else {
                // If the player already has been added, we display a message informing the user.
                JOptionPane.showMessageDialog(new JDialog(), "The player has already been added to the session.");
            }
        }
    }//GEN-LAST:event_sessionAddPlayerBtnActionPerformed

    private void sessionPlayersTFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sessionPlayersTFMousePressed

    }//GEN-LAST:event_sessionPlayersTFMousePressed
                                     
    private void sessionCreateNoteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionCreateNoteBtnActionPerformed
        viewCreateNoteInSession();
        
    }//GEN-LAST:event_sessionCreateNoteBtnActionPerformed

    /**
     * 
     * @param evt 
     */
    private void sessionViewProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionViewProfileBtnActionPerformed
        // String player = sessionPlayersBox.getSelectedItem().toString();
        
        /** Implementation of new ComboBox replacing getPlayerByName() */
        Item item = (Item) sessionPlayersBox.getSelectedItem();
        Player player = (Player) item.getValue();
        viewPlayerProfile(player);
        int i = JOptionPane.showConfirmDialog(new JDialog(), "Do you wish to close the session?", "Close session?", JOptionPane.YES_NO_OPTION);
        if(i == 0){
            sessionFrame.dispose();
        }
    }//GEN-LAST:event_sessionViewProfileBtnActionPerformed

    /**
     * Creates a new note for the selected player in a particular session on basis of the
     * user input given in the JTextFields and JLabels
     * @param evt 
     */
    private void sessionAddNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionAddNoteActionPerformed
        //String playerName = sessionPlayersBox.getSelectedItem().toString();
        //Player player = PDB.getPlayerByName(playerName);
        
        /** Implementation of new ComboBox replacing getPlayerByName() */
        Item item = (Item) sessionPlayersBox.getSelectedItem();
        Player player = (Player) item.getValue();
        UUID ssID = this.currentSessionID;
        ScoutingSession ss = AGENDA.getSessionByID(ssID);
        
        String speedText = sessionNoteSpeed.getText();
        int speedScore = Integer.parseInt((String)sessionRatingSpeed.getSelectedItem());
        String attitudeText = sessionNoteAttitude.getText();
        int attitudeScore = Integer.parseInt((String)sessionRatingAttitude.getSelectedItem());
        String techniqueText = sessionNoteTechnique.getText();
        int techniqueScore = Integer.parseInt((String)sessionRatingTechnique.getSelectedItem());
        String gamesenseText = sessionNoteGamesense.getText();
        int gamesenseScore = Integer.parseInt((String)sessionRatingGamesense.getSelectedItem());
        player.addNote(
                ss, 
                speedText, speedScore, 
                attitudeText, attitudeScore,
                techniqueText, techniqueScore,
                gamesenseText, gamesenseScore);
        viewPlayerProfile(player);
        sessionFrame.dispose();
    }//GEN-LAST:event_sessionAddNoteActionPerformed

    private void upcomingTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upcomingTableMousePressed
            if(evt.getClickCount() == 2){
            int row = upcomingTable.getSelectedRow();
            // Important to use getModel() as we have to access the model in order 
            // to get the value at the 'hidden' column. 
            Object ssID = upcomingTable.getModel().getValueAt(row, 3);
            UUID sessionID = (UUID) ssID;
            this.currentSessionID = sessionID;
            // JDialog opens with the scouting session which ID match sessionID
            viewSession(sessionID);
            }
    }//GEN-LAST:event_upcomingTableMousePressed

    /**
     * Detects when the table is clicked and identifies the row that is clicked.
     * Subsequently, the value of the cell which contains sessionID in the selected row 
     * is retrieved and passed to the viewNote() method.
     * @param evt 
     */
    private void sessionNotesTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sessionNotesTableMousePressed
        if(evt.getClickCount() == 2){
            int row = sessionNotesTable.getSelectedRow();
            Object ssID = sessionNotesTable.getModel().getValueAt(row, 2);
            UUID sessionID = (UUID) ssID;
            // Updating the instance variable which holds the ID of the current Scouting Session
            this.currentSessionID = sessionID;
            viewNote(sessionID);
        }
    }//GEN-LAST:event_sessionNotesTableMousePressed
    // Function not used
    private void notePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notePanelMousePressed

    }//GEN-LAST:event_notePanelMousePressed
    /** 
     * Saves changes to the note.
     * Updates the JTextFields and JLabels with the edits made by the user.
     * @param evt 
     */
    private void noteSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteSaveBtnActionPerformed
        noteTFSpeed.setText(noteTFSpeed1.getText());
        noteTFAttitude.setText(noteTFAttitude1.getText());
        noteTFTechnique.setText(noteTFTechnique1.getText());
        noteTFGamesense.setText(noteTFGamesense1.getText());

        noteRatingSpeed.setText(noteRatingSpeedEdit.getSelectedItem().toString());
        noteRatingAttitude.setText(noteRatingAttitudeEdit.getSelectedItem().toString());
        noteRatingTechnique.setText(noteRatingTechniqueEdit.getSelectedItem().toString());
        noteRatingGamesense.setText(noteRatingGamesenseEdit.getSelectedItem().toString());
        changeCard(contentPanel, notePanel);
    }//GEN-LAST:event_noteSaveBtnActionPerformed
    
    /**
     * Cancels the edit of a note.
     * Changes the card in the JPanel 'contentPanel' to notePanel.
     * @param evt 
     */
    private void cancelNoteEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelNoteEditBtnActionPerformed
        changeCard(contentPanel, notePanel);
    }//GEN-LAST:event_cancelNoteEditBtnActionPerformed

    /**
     * Changes card to a Panel which allows for editing the note.
     * Furthermore, the JTextFields and JComboBoxes, which are to be edited, 
     * are updated with the current values of the existing note.
     * @param evt 
     */
    private void noteEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteEditBtnActionPerformed
        noteDateLabelEdit.setText(noteDateLabel.getText());
        noteLocationLabelEdit.setText(noteLocationLabel.getText());
        notePlayerNameLabelEdit.setText(notePlayerNameLabel.getText());
        
        noteTFSpeed1.setText(noteTFSpeed.getText());
        noteTFAttitude1.setText(noteTFAttitude.getText());
        noteTFTechnique1.setText(noteTFTechnique.getText());
        noteTFGamesense1.setText(noteTFGamesense.getText());
        
        int speedIndex = Integer.parseInt(noteRatingSpeed.getText());
        noteRatingSpeedEdit.setSelectedIndex(speedIndex-1);
        int attitudeIndex = Integer.parseInt(noteRatingAttitude.getText());
        noteRatingAttitudeEdit.setSelectedIndex(attitudeIndex-1);
        int techniqueIndex = Integer.parseInt(noteRatingTechnique.getText());
        noteRatingTechniqueEdit.setSelectedIndex(techniqueIndex-1);
        int gamesenseIndex = Integer.parseInt(noteRatingGamesense.getText());
        noteRatingGamesenseEdit.setSelectedIndex(gamesenseIndex-1);
        changeCard(contentPanel, notePanelEdit);
    }//GEN-LAST:event_noteEditBtnActionPerformed
    /**
     * Detects when the table is clicked and identifies the row that is clicked.
     * Subsequently, the value of the cell which contains playerID in the selected row 
     * is retrieved and passed to the viewPlayerProfileByID() method.
     * @param evt 
     */
    private void plrTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plrTableMousePressed
        if(evt.getClickCount() == 2){
            int row = plrTable.getSelectedRow();
            Object Objid = plrTable.getModel().getValueAt(row, 3);
            UUID id = (UUID) Objid;
            this.currentPlayerID = id;
            viewPlayerProfileByID(id);
        }
    }//GEN-LAST:event_plrTableMousePressed
    /**
     * Returns the user to the Player Profile.
     * @param evt 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        viewPlayerProfileByID(this.currentPlayerID);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * Returns the user to the Player Profile.
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        viewPlayerProfileByID(this.currentPlayerID);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

     /**
     * 
     * 
     *  ACTIONLISTENERS
     *       END
     * 
     */
    
    
    /**
     * 
     * 
     * 
     * INPUT OUTPUT FUNCTIONS
     *      BEGINNING
     * 
     * 
     * 
     */
    

    /**
     * Changes card to playerPanel in which it inserts the found players attributes.
     * @param table the table that was clicked
     * @param row the row that was clicked
     * @param col the column that was clicked
     */
    public void insertCellValueToPanel(JTable table, int row, int col){
        // Gets the player name that was pressed
        String playerName = table.getValueAt(row, col).toString();
        // Finds the Player in the database
        for(int i = 0; i < PDB.getArrayListPlayer().size(); i++){
            if(playerName.matches(PDB.getPlayerByIndex(i).getName())){
                //Change card to playerPanel
                changeCard(contentPanel, playerPanel);
                //Set player name
                playerNameLabel.setText(PDB.getPlayerByIndex(i).getName());
                //Set player age
                String age = Integer.toString(PDB.getPlayerByIndex(i).getAge());
                playerAgeLabel.setText(age);
                //Set player club
                playerClubLabel.setText(PDB.getPlayerByIndex(i).getClub());
            }
        }
    }
    
    /**
     * Returns true if a Player already has been added to the TextField.
     * @return true or false
     */
    public boolean PlayerAlreadyAdded(){
   // User input containing name of Player
    String inputPlayer = sessionPlayerBox.getSelectedItem().toString();
    // Getting the content of the JTextField of already added players
    String playersInTF = sessionPlayersTF.getText();

        // Check if the TextField is empty
        if(!playersInTF.isEmpty()){

        // String array of the JTextField content is created
        String[] plrArray = playersInTF.split("\n");

            // Checking if a player already has been added to the session
            // by looping through the String array of player names.
                for(int i = 0; i < plrArray.length; i++) {
                        // If the input match one of the players already added, return true
                        if (inputPlayer.equals(plrArray[i])) {
                            return true;
                        }
                }
        }
        // Otherwise return false
        return false;
    }
    
    /**
     * Retrieves the players from the TextField of players wished to be added to a session
     * @return String array of Player names
     */
    public String[] getPlayerFromTF(){
        String playersInTF = sessionPlayersTF.getText();
        String[] plrArray = playersInTF.split("\n");
        
        return plrArray;
    }
    
    /**
     * Checks if there's any unsaved user input in the JTextFields under the agenda.
     * @return TRUE in case there is and asks the user if he wants to continue anyway.
     */
    public boolean warningUnsavedSessionDetailsToBeLost(){
        if(!sessionDateField.getText().isEmpty()){
            int i = JOptionPane.showConfirmDialog(new JDialog(), "Your data has not been saved and will be lost. Do you wish to continue?", "Data will be lost", JOptionPane.YES_NO_OPTION);
                if(i == 0){
                    this.setSessionDateField("");
                    return true;
                } else {
                    return false;
                }
        }
        if(!sessionPlaceField.getText().isEmpty()){
            int i = JOptionPane.showConfirmDialog(new JDialog(), "Your data has not been saved and will be lost. Do you wish to continue?", "Data will be lost",JOptionPane.YES_NO_OPTION);
                if(i == 0){
                    this.setSessionPlaceField("");
                    return true;
                } else {
                    return false;
                }
        }
        if(!sessionPlayersTF.getText().isEmpty()){
            int i = JOptionPane.showConfirmDialog(new JDialog(), "Your data has not been saved and will be lost. Do you wish to continue?", "Data will be lost",JOptionPane.YES_NO_OPTION);
                if(i == 0){
                    sessionPlayersTF.setText("");
                    return true;
                } else {
                    return false;
                }
        }
        // Is true by default as we want the page to load if there is no warning anyway.
        return true;
    }
    
    /**
     * 
     * @param box
     * @param list 
     * @param t 
     */
    public void addPlayersToComboBox(JComboBox box, ArrayList<Player> list){
        // Clear box of items so we avoid dublets
        box.removeAll();
        // Maybe implement function here that sorts the ArrayList
        for(Player token : list){
            box.addItem(new Item<Player>(token, token.getName()));
        }
    }
    
    
    /**
     * 
     * 
     * 
     * INPUT OUTPUT FUNCTIONS
     *         END
     * 
     * 
     */
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserInterface UI = new UserInterface();
                UI.populatePlayerList();
                UI.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JPanel agendaPanel;
    private javax.swing.JButton cancelNoteEditBtn;
    private javax.swing.JTextField clubField;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel noteDateLabel;
    private javax.swing.JLabel noteDateLabelEdit;
    private javax.swing.JButton noteEditBtn;
    private javax.swing.JLabel noteLocationLabel;
    private javax.swing.JLabel noteLocationLabelEdit;
    private javax.swing.JPanel notePanel;
    private javax.swing.JPanel notePanelEdit;
    private javax.swing.JLabel notePlayerNameLabel;
    private javax.swing.JLabel notePlayerNameLabelEdit;
    private javax.swing.JLabel noteRatingAttitude;
    private javax.swing.JComboBox<String> noteRatingAttitudeEdit;
    private javax.swing.JLabel noteRatingGamesense;
    private javax.swing.JComboBox<String> noteRatingGamesenseEdit;
    private javax.swing.JLabel noteRatingSpeed;
    private javax.swing.JComboBox<String> noteRatingSpeedEdit;
    private javax.swing.JLabel noteRatingTechnique;
    private javax.swing.JComboBox<String> noteRatingTechniqueEdit;
    private javax.swing.JButton noteSaveBtn;
    private javax.swing.JTextField noteTFAttitude;
    private javax.swing.JTextField noteTFAttitude1;
    private javax.swing.JTextField noteTFGamesense;
    private javax.swing.JTextField noteTFGamesense1;
    private javax.swing.JTextField noteTFSpeed;
    private javax.swing.JTextField noteTFSpeed1;
    private javax.swing.JTextField noteTFTechnique;
    private javax.swing.JTextField noteTFTechnique1;
    private javax.swing.JLabel playerAgeLabel;
    private javax.swing.JLabel playerClubLabel;
    private javax.swing.JPanel playerListPanel;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JPanel playerPanel;
    private javax.swing.JPanel playerPanelBottom;
    private javax.swing.JPanel playerPanelBottomBlank;
    private org.jdesktop.swingx.JXTable plrTable;
    private javax.swing.JButton registerBtn;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JButton registerPlayer;
    private javax.swing.JButton saveAllBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchFieldAge;
    private javax.swing.JTextField searchFieldClub;
    private javax.swing.JTextField searchFieldName;
    private javax.swing.JButton sessionAddBtn;
    private javax.swing.JButton sessionAddNote;
    private javax.swing.JButton sessionAddPlayerBtn;
    private javax.swing.JButton sessionCreateNoteBtn;
    private javax.swing.JPanel sessionCreateNotePanel;
    private javax.swing.JFormattedTextField sessionDateField;
    private javax.swing.JLabel sessionDateLabel;
    private javax.swing.JLabel sessionIDLabel;
    private javax.swing.JTextField sessionNoteAttitude;
    private javax.swing.JTextField sessionNoteGamesense;
    private javax.swing.JTextField sessionNoteSpeed;
    private javax.swing.JTextField sessionNoteTechnique;
    private javax.swing.JTable sessionNotesTable;
    private javax.swing.JPanel sessionPanel;
    private javax.swing.JTextField sessionPlaceField;
    private javax.swing.JLabel sessionPlaceLabel;
    /*
    private javax.swing.JComboBox<String> sessionPlayerBox;
    */
    private javax.swing.JComboBox<Item<Player>> sessionPlayerBox;
    /*
    private javax.swing.JComboBox<String> sessionPlayersBox;
    */
    private javax.swing.JComboBox<Item<Player>> sessionPlayersBox;
    private javax.swing.JTextArea sessionPlayersTF;
    private javax.swing.JComboBox<String> sessionRatingAttitude;
    private javax.swing.JComboBox<String> sessionRatingGamesense;
    private javax.swing.JComboBox<String> sessionRatingSpeed;
    private javax.swing.JComboBox<String> sessionRatingTechnique;
    private javax.swing.JButton sessionViewProfileBtn;
    private javax.swing.JLabel upcomingLabel;
    private org.jdesktop.swingx.JXTable upcomingTable;
    private javax.swing.JButton viewAgenda;
    private javax.swing.JButton viewPlayerList;
    // End of variables declaration//GEN-END:variables
}
